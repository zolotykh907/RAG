import { useState } from 'react';
import axios from 'axios';

export default function Upload() {
  const [file, setFile] = useState(null);
  const [message, setMessage] = useState('');
  const [loading, setLoading] = useState(false);
  const [messageType, setMessageType] = useState('');

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (!file) return;

    setLoading(true);
    setMessage('');
    setMessageType('');

    const formData = new FormData();
    formData.append('file', file);

    try {
      const response = await axios.post(
        'http://localhost:8000/upload-files', 
        formData,
        {
          headers: {
            'Content-Type': 'multipart/form-data'
          }
        }
      );
      setMessage(response.data.message);
      setMessageType('success');
      setFile(null);
      // –û—á–∏—â–∞–µ–º input —Ñ–∞–π–ª–∞
      e.target.reset();
    } catch (error) {
      setMessage(error.response?.data?.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞');
      setMessageType('error');
    } finally {
      setLoading(false);
    }
  };

  const handleFileChange = (e) => {
    const selectedFile = e.target.files[0];
    setFile(selectedFile);
    setMessage('');
    setMessageType('');
  };

  const formatFileSize = (bytes) => {
    if (bytes === 0) return '0 Bytes';
    const k = 1024;
    const sizes = ['Bytes', 'KB', 'MB', 'GB'];
    const i = Math.floor(Math.log(bytes) / Math.log(k));
    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
  };

  return (
    <div className="upload-container">
      <h2>üìÅ –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤</h2>
      <p style={{ color: '#666', marginBottom: '1.5rem' }}>
        –ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏ –≤ –≤–µ–∫—Ç–æ—Ä–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö. 
        –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç—ã: PDF, DOC, DOCX, TXT, JPG, PNG
      </p>
      
      <form onSubmit={handleSubmit}>
        <label htmlFor="file" style={{ fontWeight: '500', color: '#333' }}>
          –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª:
        </label>
        <input 
          id="file"
          type="file" 
          onChange={handleFileChange}
          accept=".pdf,.doc,.docx,.txt,.jpg,.jpeg,.png"
          required 
          disabled={loading}
        />
        
        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ñ–∞–π–ª–µ */}
        {file && (
          <div style={{
            padding: '1rem',
            background: '#f8f9fa',
            borderRadius: '8px',
            border: '1px solid #e1e5e9',
            marginTop: '0.5rem'
          }}>
            <div style={{ display: 'flex', alignItems: 'center', gap: '0.5rem' }}>
              <span style={{ fontSize: '1.2rem' }}>üìÑ</span>
              <div>
                <div style={{ fontWeight: '500' }}>{file.name}</div>
                <div style={{ fontSize: '0.9rem', color: '#666' }}>
                  {formatFileSize(file.size)} ‚Ä¢ {file.type || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø'}
                </div>
              </div>
            </div>
          </div>
        )}
        
        <button type="submit" disabled={loading || !file}>
          {loading ? (
            <div className="loading">
              <div className="spinner"></div>
              <span>–ò–Ω–¥–µ–∫—Å–∞—Ü–∏—è —Ñ–∞–π–ª–∞...</span>
            </div>
          ) : (
            'üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏ –ø—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞—Ç—å'
          )}
        </button>
      </form>

      {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ */}
      {message && (
        <div className={`message ${messageType}`}>
          {messageType === 'success' ? '‚úÖ ' : '‚ùå '}
          {message}
        </div>
      )}

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö */}
      <div style={{
        marginTop: '2rem',
        padding: '1rem',
        background: '#e3f2fd',
        borderRadius: '8px',
        border: '1px solid #bbdefb'
      }}>
        <h4 style={{ color: '#1976d2', marginBottom: '0.5rem' }}>‚ÑπÔ∏è –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:</h4>
        <ul style={{ margin: 0, paddingLeft: '1.5rem', color: '#1976d2' }}>
          <li><strong>PDF</strong> - –î–æ–∫—É–º–µ–Ω—Ç—ã Adobe PDF</li>
          <li><strong>DOC/DOCX</strong> - –î–æ–∫—É–º–µ–Ω—Ç—ã Microsoft Word</li>
          <li><strong>TXT</strong> - –¢–µ–∫—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã</li>
          <li><strong>JPG/PNG</strong> - –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (—Å OCR)</li>
        </ul>
      </div>
    </div>
  );
}